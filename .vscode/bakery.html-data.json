{
  "version": 1.1,
  "tags": [
    {
      "name": "d-card",
      "description": "A card to segment content in the document flow. Useful for grouped information so as to easily display those divisions to the user.\n\nAttributes:\n  - `colour` - A colour to fill the card with. *optional* **default**: surface\n\nSlots:\n  - `default` - The body of the card.\n  - `title` - The title content of the card. Does not require text styling.",
      "attributes": [
        {
          "name": "colour",
          "description": "A colour to fill the card with.",
          "valueSet": "colour"
        }
      ]
    },
    {
      "name": "d-panel",
      "description": "A simple panel to set the colour of a block. Offers no padding and no borders by default.\n\nAttributes:\n  - `colour` - The colour for the block. Will update background and text colour. *optional* **default**: body\n  - `bordered` - If set then the panel will have a border and shadow but still no padding.",
      "attributes": [
        {
          "name": "colour",
          "description": "The colour for the block. Will update background and text colour.",
          "valueSet": "colour"
        },
        {
          "name": "bordered",
          "description": "If set then the panel will have a border and shadow but still no padding.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "d-loading",
      "description": "A loading overlay that covers the whole page. Should be used sparingly.\n\nAttributes:\n  - `open` - If true then the overlay will render.",
      "attributes": [
        {
          "name": "open",
          "description": "If true then the overlay will render.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "d-listgroup",
      "description": "Uses the children to display a list of items. Each one a block with a standard border. Only `span` and `a` tags as children are supported. The children may have a theme colour as a class name in order to style them.",
      "attributes": []
    },
    {
      "name": "d-alert",
      "description": "A simple coloured alert to display update information to the user. Commonly used to display error or success messages after a submission or interaction.\n\nAttributes:\n  - `colour` - A the colour to fill the alert with. *optional* **default**: warning\n  - `closeable` - If true, a close button is displayed and the element will be removed when it is clicked. A close event Will be fired which can be prevented.",
      "attributes": [
        {
          "name": "colour",
          "description": "A the colour to fill the alert with.",
          "valueSet": "colour"
        },
        {
          "name": "closeable",
          "description": "If true, a close button is displayed and the element will be removed when it is clicked. A close event Will be fired which can be prevented.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "d-carousel",
      "description": "A simple carousel to display slides to the user. Each child should be assigned to a slot with any name. The user will then be able to cycle between each child in turn.\n\nAttributes:\n  - `height` - The height of the carousel and, as such, each slide. Should be a CSS height value. *optional* **default**: 30rem\n  - `no-tabs` - If true, the navigation tabs at the bottom of the slides will not be displayed.",
      "attributes": [
        {
          "name": "height",
          "description": "The height of the carousel and, as such, each slide. Should be a CSS height value."
        },
        {
          "name": "no-tabs",
          "description": "If true, the navigation tabs at the bottom of the slides will not be displayed.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "d-progress",
      "description": "A simple progress bar. Children can be used to set display text.\n\nAttributes:\n  - `value` - A percentage value of the progress. Should not include anything other than numbers and a decimal place.\n  - `colour` - The colour for the progress foreground. The background will always be surface. *optional* **default**: primary",
      "attributes": [
        {
          "name": "value",
          "description": "A percentage value of the progress. Should not include anything other than numbers and a decimal place.",
          "valueSet": "number"
        },
        {
          "name": "colour",
          "description": "The colour for the progress foreground. The background will always be surface.",
          "valueSet": "colour"
        }
      ]
    },
    {
      "name": "f-button",
      "description": "A simple button that the user can click for various actions. If the `type` is included then the button can be a standard or submit button. If the `href` is included the the button is a link. Buttons that are placed next to other buttons will automatically merge into a group.\n\nAttributes:\n  - `colour` - The colour for the button to render. *optional* **default**: primary\n  - `type` - The button type when used as a standard button. Should not be included with `href` for consistent behavior. *optional*\n  - `href` - The URL to send the user to if the button is being used as a link. Should not be included with `type`. *optional*\n  - `target` - The standard target from an anchor element. Should only be included if `href` is present. *optional*\n  - `private` - If set then the link will be treated as external. This means that `rel=\"noreferrer noopener\"` will be applied.\n  - `spa` - If set then the link will use a SPA push to navigate rather than loading the page. Will be ignored if `target` or `private` are set.\n  - `replace` - Only used if `spa` is set. Will make the link replace the state rather than push. Useful if you don't want the back button to keep people on the page.",
      "attributes": [
        {
          "name": "colour",
          "description": "The colour for the button to render.",
          "valueSet": "colour"
        },
        {
          "name": "type",
          "description": "The button type when used as a standard button. Should not be included with `href` for consistent behavior.",
          "valueSet": "button_type"
        },
        {
          "name": "href",
          "description": "The URL to send the user to if the button is being used as a link. Should not be included with `type`."
        },
        {
          "name": "target",
          "description": "The standard target from an anchor element. Should only be included if `href` is present.",
          "valueSet": "target"
        },
        {
          "name": "private",
          "description": "If set then the link will be treated as external. This means that `rel=\"noreferrer noopener\"` will be applied.",
          "valueSet": "boolean"
        },
        {
          "name": "spa",
          "description": "If set then the link will use a SPA push to navigate rather than loading the page. Will be ignored if `target` or `private` are set.",
          "valueSet": "boolean"
        },
        {
          "name": "replace",
          "description": "Only used if `spa` is set. Will make the link replace the state rather than push. Useful if you don't want the back button to keep people on the page.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "f-input",
      "description": "A single line text input. Must be placed within a `form` tag.\n\nAttributes:\n  - `type` - The keyboard to be used for the input when using a mobile device. *optional* **default**: text\n  - `prefill` - The default text for the textbox. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `sensitive` - If set then the form element is hidden from the user. Useful for password inputs.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. *optional*\n\nSlots:\n  - `default` - The label text\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "type",
          "description": "The keyboard to be used for the input when using a mobile device.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode"
            }
          ],
          "valueSet": "keyboard"
        },
        {
          "name": "prefill",
          "description": "The default text for the textbox."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "sensitive",
          "description": "If set then the form element is hidden from the user. Useful for password inputs.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable."
        }
      ]
    },
    {
      "name": "f-select",
      "description": "A dropdown select. Must be placed within a `form` tag.\n\nAttributes:\n  - `prefill` - The default selected item. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. *optional*\n\nSlots:\n  - `default` - The options for select. Should be an `option` element.\n  - `label` - The label for the input\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "prefill",
          "description": "The default selected item."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable."
        }
      ]
    },
    {
      "name": "f-date",
      "description": "A form data picker. Must be placed within a `form` tag.\n\nAttributes:\n  - `prefill` - The initial date to display to the user. Defaults to the current date. Should be in `yyyy-mm-dd` format. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. Remember that the value is in the format of `yyyy-mm-dd`. *optional*\n\nSlots:\n  - `default` - The label text\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "prefill",
          "description": "The initial date to display to the user. Defaults to the current date. Should be in `yyyy-mm-dd` format."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. Remember that the value is in the format of `yyyy-mm-dd`."
        }
      ]
    },
    {
      "name": "f-textarea",
      "description": "A multi line plain text input. Must be placed within a `form` tag.\n\nAttributes:\n  - `type` - The keyboard to be used for the input when using a mobile device. *optional* **default**: text\n  - `prefill` - The default text for the textbox. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. *optional*\n\nSlots:\n  - `default` - The label text\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "type",
          "description": "The keyboard to be used for the input when using a mobile device.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode"
            }
          ],
          "valueSet": "keyboard"
        },
        {
          "name": "prefill",
          "description": "The default text for the textbox."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable."
        }
      ]
    },
    {
      "name": "f-multiselect",
      "description": "A list of items, of which the user can select any number.\n\nAttributes:\n  - `prefill` - The default selected items. Should be comma separated with no whitespace between. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. Remember that the value is a comma separated string of all of the selected options. *optional*\n\nSlots:\n  - `default` - The options for select. Should be an `option` element.\n  - `label` - The label for the input\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "prefill",
          "description": "The default selected items. Should be comma separated with no whitespace between."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. Remember that the value is a comma separated string of all of the selected options."
        }
      ]
    },
    {
      "name": "f-singleselect",
      "description": "A list of items, of which the user can select a single item. Must be placed within a `form` tag.\n\nAttributes:\n  - `prefill` - The default selected item. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. *optional*\n\nSlots:\n  - `default` - The options for select. Should be an `option` element.\n  - `label` - The label for the input\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "prefill",
          "description": "The default selected item."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable."
        }
      ]
    },
    {
      "name": "f-toggle",
      "description": "A box to toggle between two options. Must be placed within a `form` tag.\n\nAttributes:\n  - `prefill` - Set to `on` if the item should be toggled on by default. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has the value of `on`.\n\nSlots:\n  - `default` - The label text\n  - `on` - The text for the active state\n  - `off` - The text for the inactive state\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "prefill",
          "description": "Set to `on` if the item should be toggled on by default."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has the value of `on`.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "f-richtext",
      "description": "A multi line rich text input form element. Must be placed within a `form` tag. To properly support images, it is recommended to listen for `ImageAdded` events. Setting the `URL` property on the event to the promise of a string or a string itself will set the URL of the image to that. If this is not present then a Data URL will be generated.\n\nAttributes:\n  - `type` - The keyboard to be used for the input when using a mobile device. *optional* **default**: text\n  - `prefill` - The default selected item. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. *optional*\n\nSlots:\n  - `default` - The label text\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "type",
          "description": "The keyboard to be used for the input when using a mobile device.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode"
            }
          ],
          "valueSet": "keyboard"
        },
        {
          "name": "prefill",
          "description": "The default selected item."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable."
        }
      ]
    },
    {
      "name": "f-image",
      "description": "A upload box for images. Must be placed within a `form` tag.\n\nAttributes:\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field a value.\n  - `height` - Height of the input element on screen. Useful for when uploading large images. *optional* **default**: 12rem\n\nSlots:\n  - `default` - The label text\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field a value.",
          "valueSet": "boolean"
        },
        {
          "name": "height",
          "description": "Height of the input element on screen. Useful for when uploading large images.",
          "valueSet": "string"
        }
      ]
    },
    {
      "name": "f-form",
      "description": "The form container to replace the existing `form` tag.\n\nAttributes:\n  - `url` - The URL to submit to. Can include parameters like the `u-fetch` tag. *optional*\n  - `method` - The method for the submission request. *optional* **default**: post\n  - `submit` - The form type. Should be AJAX if doing a SPA model. *optional* **default**: ajax-json\n  - `success-url` - Used if the submission type is an AJAX type. The current URL with current URL will be used if nothing is set. The form will provide the response JSON to the `u-` context if it is still rendered after submission. *optional*\n  - `credentials` - Only used for AJAX submission types. Set how crednetials are sent to the client. *optional* **default**: same-origin",
      "attributes": [
        {
          "name": "url",
          "description": "The URL to submit to. Can include parameters like the `u-fetch` tag.",
          "valueSet": "string"
        },
        {
          "name": "method",
          "description": "The method for the submission request.",
          "valueSet": "request_method"
        },
        {
          "name": "submit",
          "description": "The form type. Should be AJAX if doing a SPA model.",
          "valueSet": "submission_type"
        },
        {
          "name": "success-url",
          "description": "Used if the submission type is an AJAX type. The current URL with current URL will be used if nothing is set. The form will provide the response JSON to the `u-` context if it is still rendered after submission.",
          "valueSet": "string"
        },
        {
          "name": "credentials",
          "description": "Only used for AJAX submission types. Set how crednetials are sent to the client.",
          "valueSet": "RequestCredentials"
        }
      ]
    },
    {
      "name": "f-time",
      "description": "A time picker. No time zone selection by default.\n\nAttributes:\n  - `prefill` - The initial time to display. Should be in ISO format. E.G. `hh:mm:ss`. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. Consider the format in the `prefill` attribute as all values will be in that format. *optional*\n  - `no-seconds` - If set then only hours and minutes will be editable.\n\nSlots:\n  - `default` - The label text\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "prefill",
          "description": "The initial time to display. Should be in ISO format. E.G. `hh:mm:ss`."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. Consider the format in the `prefill` attribute as all values will be in that format."
        },
        {
          "name": "no-seconds",
          "description": "If set then only hours and minutes will be editable.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "f-numeric",
      "description": "A number input. Has the option for prefix and suffix for currency and mathmatical information.\n\nAttributes:\n  - `decimal-places` - The number of decimal places that the user is allowed to enter until. *optional* **default**: 2\n  - `no-negative` - If set then negative values will not be available.\n  - `prefill` - The default text for the textbox. *optional*\n  - `disabled` - If set then the field is readonly.\n  - `sensitive` - If set then the form element is hidden from the user. Useful for password inputs.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field has a value.\n  - `validate` - A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable. *optional*\n\nSlots:\n  - `default` - The label text\n  - `prefix` - Just before the number\n  - `suffix` - Just after the number\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "decimal-places",
          "description": "The number of decimal places that the user is allowed to enter until.",
          "valueSet": "string"
        },
        {
          "name": "no-negative",
          "description": "If set then negative values will not be available.",
          "valueSet": "boolean"
        },
        {
          "name": "prefill",
          "description": "The default text for the textbox."
        },
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "sensitive",
          "description": "If set then the form element is hidden from the user. Useful for password inputs.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field has a value.",
          "valueSet": "boolean"
        },
        {
          "name": "validate",
          "description": "A RegExp string used to evaluate the input. If there are no matches then the field will be considered invalid and the form will not be submittable."
        }
      ]
    },
    {
      "name": "f-file",
      "description": "An upload box for one or more files. Must be placed within a `form` tag.\n\nAttributes:\n  - `disabled` - If set then the field is readonly.\n  - `name` - The name of the value field in the form data. Should be unique.\n  - `required` - If set then the form will not be submittable until the element field a value.\n  - `multiple` - If set then multiple files may be uploaded. If not then only one file may be uploaded.\n  - `accept` - The accepted mime types. Uses the same schema as the HTML input element. *optional* **default**: *\n\nSlots:\n  - `default` - The label text\n  - `help` - The small help text at the bottom of the input.\n  - `empty` - The error text for if the slot is empty and required is true.\n  - `invalid` - The error text for if validate is set and the RegExp does not match",
      "attributes": [
        {
          "name": "disabled",
          "description": "If set then the field is readonly.",
          "valueSet": "boolean"
        },
        {
          "name": "name",
          "description": "The name of the value field in the form data. Should be unique."
        },
        {
          "name": "required",
          "description": "If set then the form will not be submittable until the element field a value.",
          "valueSet": "boolean"
        },
        {
          "name": "multiple",
          "description": "If set then multiple files may be uploaded. If not then only one file may be uploaded.",
          "valueSet": "boolean"
        },
        {
          "name": "accept",
          "description": "The accepted mime types. Uses the same schema as the HTML input element.",
          "valueSet": "string"
        }
      ]
    },
    {
      "name": "l-container",
      "description": "A container for the grid. Allows for predictable document widths.\n\nAttributes:\n  - `flush` - If true then the element will always fill the screen. Consider the need for this element in this scenario.",
      "attributes": [
        {
          "name": "flush",
          "description": "If true then the element will always fill the screen. Consider the need for this element in this scenario.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "l-row",
      "description": "A row to contain `l-col` tags.\n\nAttributes:\n  - `cols` - The number of columns to have per row. *optional* **default**: 12\n  - `no-padding` - If set then there will be no outer padding on the row.\n  - `no-gap` - If set then there will be no gap between the columns.",
      "attributes": [
        {
          "name": "cols",
          "description": "The number of columns to have per row.",
          "valueSet": "number"
        },
        {
          "name": "no-padding",
          "description": "If set then there will be no outer padding on the row.",
          "valueSet": "boolean"
        },
        {
          "name": "no-gap",
          "description": "If set then there will be no gap between the columns.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "l-col",
      "description": "A column within a grid. They can wrap on to new lines without upsetting the flow.\n\nAttributes:\n  - `xs` - The size of the column on the smallest screen size.\n  - `sm` - The size of the column on small screens. *optional*\n  - `md` - The size of the column on medium screens. *optional*\n  - `lg` - The size of the column on large screens. *optional*\n  - `xl` - The size of the column on extra large screens. *optional*",
      "attributes": [
        {
          "name": "xs",
          "description": "The size of the column on the smallest screen size."
        },
        {
          "name": "sm",
          "description": "The size of the column on small screens."
        },
        {
          "name": "md",
          "description": "The size of the column on medium screens."
        },
        {
          "name": "lg",
          "description": "The size of the column on large screens."
        },
        {
          "name": "xl",
          "description": "The size of the column on extra large screens."
        }
      ]
    },
    {
      "name": "l-templated",
      "description": "Insert a generic template into the project. Should only be used with trusted data.\n\nAttributes:\n  - `use` - The HTML ID or URL of the template desired. If a HTML ID then it should point to a `template` tag. If a URL then it should point to a HTML file. That file should contain no `html` or `body` tags and should only container the content as if it was in a `template` tag.\n  - `remote` - If set then the use attribute will be treated as a URL. If not then it will be treated as a HTML ID.",
      "attributes": [
        {
          "name": "use",
          "description": "The HTML ID or URL of the template desired. If a HTML ID then it should point to a `template` tag. If a URL then it should point to a HTML file. That file should contain no `html` or `body` tags and should only container the content as if it was in a `template` tag."
        },
        {
          "name": "remote",
          "description": "If set then the use attribute will be treated as a URL. If not then it will be treated as a HTML ID.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "l-header",
      "description": "A header for your site. A logo is a must if you are using this.\n\nAttributes:\n  - `logo` - The URL for the company logo. Best if it is rather small and mostly square.\n  - `logo-alt` - The alt text for if the company logo can not be loaded. *optional*\n  - `bg` - The background colour for the header. *optional* **default**: primary\n  - `flush` - If true then the header will span the width of the screen. Use if using a flush container or not using a container for your page body.\n\nSlots:\n  - `default` - The left hand content of the banner. Should primerally have anchors as children.\n  - `right` - The right hand content of the banner. Could have anchors or a form as the children.",
      "attributes": [
        {
          "name": "logo",
          "description": "The URL for the company logo. Best if it is rather small and mostly square."
        },
        {
          "name": "logo-alt",
          "description": "The alt text for if the company logo can not be loaded."
        },
        {
          "name": "bg",
          "description": "The background colour for the header.",
          "valueSet": "colour"
        },
        {
          "name": "flush",
          "description": "If true then the header will span the width of the screen. Use if using a flush container or not using a container for your page body.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "l-accordion",
      "description": "An accordion item that is expanded with a click. If another accordion within the parent is opened then it will collapse automatically.\n\nAttributes:\n  - `open` - If set then the accordion item defaults to open on load.\n  - `independent` - If set then the accordion item will not close when another one opens.",
      "attributes": [
        {
          "name": "open",
          "description": "If set then the accordion item defaults to open on load.",
          "valueSet": "boolean"
        },
        {
          "name": "independent",
          "description": "If set then the accordion item will not close when another one opens.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "l-table",
      "description": "A data table to display tabular data to the user. Intentionally limited. Only intended to be used for actual data. If you require interaction then consider using a solution with list groups or cards. Should only contain `l-table-row` and `l-table-cell` tags.\n\nAttributes:\n  - `use` - A JavaScript snippet to get the data from the `u-` namespace.\n\nSlots:\n  - `default` - The body of the schema\n  - `head` - The head of the schema",
      "attributes": [
        {
          "name": "use",
          "description": "A JavaScript snippet to get the data from the `u-` namespace.",
          "valueSet": "string | Array<Record<string, unknown>>"
        }
      ]
    },
    {
      "name": "l-table-cell",
      "description": "A data tag for a cell in a table.\n\nAttributes:\n  - `width` - The width of the cell in the table.\n  - `height` - The height of the cell in the table.\n  - `colspan` - The colspan of the cell in the table.\n  - `rowspan` - The rowspan of the cell in the table.",
      "attributes": [
        {
          "name": "width",
          "description": "The width of the cell in the table."
        },
        {
          "name": "height",
          "description": "The height of the cell in the table."
        },
        {
          "name": "colspan",
          "description": "The colspan of the cell in the table."
        },
        {
          "name": "rowspan",
          "description": "The rowspan of the cell in the table."
        }
      ]
    },
    {
      "name": "l-table-row",
      "description": "A data tag for a row in a table.",
      "attributes": []
    },
    {
      "name": "o-modal",
      "description": "A modal dialogue to be triggered by another element on the screen.\n\nAttributes:\n  - `trigger` - A CSS selector to listen to for opening the dialogue. Will listen for clicks of any elements matching the selector. *optional*\n  - `size` - The size of the modal on the screen. *optional* **default**: medium\n  - `path` - If set then the modal will be treated like a `u-router` and show if the route matches. In this case then the modal will replace the state when closed so make sure that it only routes modal specific things. *optional*\n  - `open` - If set then overrides all other behaviour to open the modal.\n\nSlots:\n  - `title` - The top of the modal.\n  - `footer` - The bottom of the modal, will be hidden if empty.",
      "attributes": [
        {
          "name": "trigger",
          "description": "A CSS selector to listen to for opening the dialogue. Will listen for clicks of any elements matching the selector."
        },
        {
          "name": "size",
          "description": "The size of the modal on the screen.",
          "valueSet": "size"
        },
        {
          "name": "path",
          "description": "If set then the modal will be treated like a `u-router` and show if the route matches. In this case then the modal will replace the state when closed so make sure that it only routes modal specific things.",
          "valueSet": "string"
        },
        {
          "name": "open",
          "description": "If set then overrides all other behaviour to open the modal.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "o-offcanvas",
      "description": "A offcanvas dialogue to be triggered by another element on the screen.\n\nAttributes:\n  - `trigger` - A CSS selector to listen to for opening the dialogue. Will listen for clicks of any elements matching the selector.\n  - `size` - The size of the modal on the screen. *optional* **default**: medium\n  - `path` - If set then the modal will be treated like a `u-router` and show if the route matches. In this case then the modal will replace the state when closed so make sure that it only routes modal specific things. *optional*\n  - `open` - If set then overrides all other behaviour to open the modal.\n\nSlots:\n  - `title` - The top of the offcanvas.\n  - `footer` - The bottom of the offcanvas, will be hidden if empty.",
      "attributes": [
        {
          "name": "trigger",
          "description": "A CSS selector to listen to for opening the dialogue. Will listen for clicks of any elements matching the selector."
        },
        {
          "name": "size",
          "description": "The size of the modal on the screen.",
          "valueSet": "size"
        },
        {
          "name": "path",
          "description": "If set then the modal will be treated like a `u-router` and show if the route matches. In this case then the modal will replace the state when closed so make sure that it only routes modal specific things.",
          "valueSet": "string"
        },
        {
          "name": "open",
          "description": "If set then overrides all other behaviour to open the modal.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "o-toast",
      "description": "A small window to display notification information to the user.\n\nAttributes:\n  - `icon` - Image URL for the icon. *optional*\n  - `metric` - Numeric information for relevant metrics such as how long ago or distance.\n  - `unit` - The unit for the metric. Conforms to the `Intl.NumberFormat` constructor. *optional* **default**: minute\n  - `unit-display` - The length of display for the unit. Conforms to the `Intl.NumberFormat` constructor. *optional* **default**: short\n  - `position` - Where on the screen shall it render? *optional* **default**: bottom right\n\nSlots:\n  - `title` - The top of the toast",
      "attributes": [
        {
          "name": "icon",
          "description": "Image URL for the icon."
        },
        {
          "name": "metric",
          "description": "Numeric information for relevant metrics such as how long ago or distance.",
          "valueSet": "number"
        },
        {
          "name": "unit",
          "description": "The unit for the metric. Conforms to the `Intl.NumberFormat` constructor.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options"
            }
          ],
          "valueSet": "unit"
        },
        {
          "name": "unit-display",
          "description": "The length of display for the unit. Conforms to the `Intl.NumberFormat` constructor.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options"
            }
          ],
          "valueSet": "unit_display"
        },
        {
          "name": "position",
          "description": "Where on the screen shall it render?",
          "valueSet": "position"
        }
      ]
    },
    {
      "name": "o-dropdown",
      "description": "A simple dropdown that can be triggered by a separate element on the page. It is automatically position below its target.\n\nAttributes:\n  - `target` - A CSS selector for the desired target. It will listen for click events from any element matching that selector and will position below the one that is clicked.\n  - `width` - The width of the dropdown menu. If unset then the width of the target will be used. Should be a CSS width.\n  - `height` - The max height of the drop down. *optional* **default**: 12rem\n  - `scrollable` - If true then the dropdown will have a scroll bar when there are too many elements within.",
      "attributes": [
        {
          "name": "target",
          "description": "A CSS selector for the desired target. It will listen for click events from any element matching that selector and will position below the one that is clicked."
        },
        {
          "name": "width",
          "description": "The width of the dropdown menu. If unset then the width of the target will be used. Should be a CSS width."
        },
        {
          "name": "height",
          "description": "The max height of the drop down."
        },
        {
          "name": "scrollable",
          "description": "If true then the dropdown will have a scroll bar when there are too many elements within.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "t-paragraph",
      "description": "A paragraph element\n\nAttributes:\n  - `large` - If set then larger text is displayed",
      "attributes": [
        {
          "name": "large",
          "description": "If set then larger text is displayed",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "t-icon",
      "description": "A icon from RemixIcon to be used to provide richness to a document.\n\nAttributes:\n  - `name` - The name taken from RemixIcon\n  - `fill` - If true then the filled variant of the RemixIcon will be used.\n  - `plain` - Certain icons do not have a fill or outlined variant. Set this to true if that is the case for you.\n  - `size` - A size of one of the text variants from the theme. Use `body` and `body_large`for paragraph sizes. Use `h{NUMBER}_display` for display headings. *optional* **default**: body\n  - `colour` - The colour of the icon. *optional* **default**: body\n  - `text` - If set to true then the text colour from the provided theme colour will be used.\n  - `spin` - If true then the icon will spin. Useful for loading indicators.",
      "references": [
        {
          "name": "RemixIcon Website",
          "url": "https://remixicon.com/"
        }
      ],
      "attributes": [
        {
          "name": "name",
          "description": "The name taken from RemixIcon",
          "references": [
            {
              "name": "RemixIcon Website",
              "url": "https://remixicon.com/"
            }
          ]
        },
        {
          "name": "fill",
          "description": "If true then the filled variant of the RemixIcon will be used.",
          "valueSet": "boolean"
        },
        {
          "name": "plain",
          "description": "Certain icons do not have a fill or outlined variant. Set this to true if that is the case for you.",
          "valueSet": "boolean"
        },
        {
          "name": "size",
          "description": "A size of one of the text variants from the theme. Use `body` and `body_large`for paragraph sizes. Use `h{NUMBER}_display` for display headings."
        },
        {
          "name": "colour",
          "description": "The colour of the icon.",
          "valueSet": "colour"
        },
        {
          "name": "text",
          "description": "If set to true then the text colour from the provided theme colour will be used.",
          "valueSet": "boolean"
        },
        {
          "name": "spin",
          "description": "If true then the icon will spin. Useful for loading indicators.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "t-heading",
      "description": "A HTML heading tag.\n\nAttributes:\n  - `level` - The heading level. *optional* **default**: h1\n  - `display` - If true then larger but thinner fonts will be used to make the text stand out.",
      "attributes": [
        {
          "name": "level",
          "description": "The heading level.",
          "valueSet": "heading_level"
        },
        {
          "name": "display",
          "description": "If true then larger but thinner fonts will be used to make the text stand out.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "t-link",
      "description": "A styled link for usage around the site.\n\nAttributes:\n  - `href` - The URL to send the user to if the button is being used as a link. If not provided then the link will simply function as a button. *optional*\n  - `target` - The standard target from an anchor element. *optional*\n  - `private` - If set then the link will be treated as external. This means that `rel=\"noreferrer noopener\"` will be applied.\n  - `block` - If set then the link will be displayed as a block rather than an inline block.\n  - `spa` - If set then the link will use a SPA push to navigate rather than loading the page. Will be ignored if `target` or `private` are set.\n  - `replace` - Only used if `spa` is set. Will make the link replace the state rather than push. Useful if you don't want the back button to keep people on the page.",
      "attributes": [
        {
          "name": "href",
          "description": "The URL to send the user to if the button is being used as a link. If not provided then the link will simply function as a button."
        },
        {
          "name": "target",
          "description": "The standard target from an anchor element.",
          "valueSet": "target"
        },
        {
          "name": "private",
          "description": "If set then the link will be treated as external. This means that `rel=\"noreferrer noopener\"` will be applied.",
          "valueSet": "boolean"
        },
        {
          "name": "block",
          "description": "If set then the link will be displayed as a block rather than an inline block.",
          "valueSet": "boolean"
        },
        {
          "name": "spa",
          "description": "If set then the link will use a SPA push to navigate rather than loading the page. Will be ignored if `target` or `private` are set.",
          "valueSet": "boolean"
        },
        {
          "name": "replace",
          "description": "Only used if `spa` is set. Will make the link replace the state rather than push. Useful if you don't want the back button to keep people on the page.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "t-code",
      "description": "A code highlighter. It uses highlight.js to correctly colour code.\n\nAttributes:\n  - `language` - The name of a language as listed in highlight.js.\n  - `use` - A JavaScript snippet to extract the data from the `u-` namespace. If an object, then the `code` property will be used to set the code rather than using the `u-` context.\n  - `file` - A file name to provide the user with a bit of context. Display only and does not change functionality.\n  - `flush` - If true then no padding or borders will be applied.",
      "attributes": [
        {
          "name": "language",
          "description": "The name of a language as listed in highlight.js.",
          "references": [
            {
              "name": "Highlight.js Language Demo",
              "url": "https://highlightjs.org/static/demo/"
            }
          ]
        },
        {
          "name": "use",
          "description": "A JavaScript snippet to extract the data from the `u-` namespace. If an object, then the `code` property will be used to set the code rather than using the `u-` context.",
          "valueSet": "string | { code: string }"
        },
        {
          "name": "file",
          "description": "A file name to provide the user with a bit of context. Display only and does not change functionality."
        },
        {
          "name": "flush",
          "description": "If true then no padding or borders will be applied.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "t-localised",
      "description": "Only displays text for the preferred locale of the user. Put content in a slot with the name of the locale it is written in. If there is no content in the slot with the preferred locale of the user, content from the unnamed slot will be used as a fallback.",
      "attributes": []
    },
    {
      "name": "t-badge",
      "description": "A badge designed for a number to site at the top right of the block it is within.\n\nAttributes:\n  - `colour` - The colour of the badge. *optional* **default**: warning",
      "attributes": [
        {
          "name": "colour",
          "description": "The colour of the badge.",
          "valueSet": "colour"
        }
      ]
    },
    {
      "name": "t-crumbs",
      "description": "Breadcrumbs designed to inform the user of the path to the current page. Only `span` and `a` tags are accepted as children.\n\nAttributes:\n  - `divider` - The character that should be used to separate the crumbs. *optional* **default**: /\n  - `colour` - The text colour for anchor crumbs. *optional* **default**: primary",
      "attributes": [
        {
          "name": "divider",
          "description": "The character that should be used to separate the crumbs."
        },
        {
          "name": "colour",
          "description": "The text colour for anchor crumbs.",
          "valueSet": "colour"
        }
      ]
    },
    {
      "name": "t-richtext",
      "description": "Display rich text from a text editor. Will filter the content to make sure that nothing harmful is displayed to the user.\n\nAttributes:\n  - `use` - A JavaScript snippet to access the data from the `u-` namespace. If an object, then the `html` property will be used to set the code rather than using the `u-` context.",
      "attributes": [
        {
          "name": "use",
          "description": "A JavaScript snippet to access the data from the `u-` namespace. If an object, then the `html` property will be used to set the code rather than using the `u-` context.",
          "valueSet": "string | { html: string }"
        }
      ]
    },
    {
      "name": "u-fetch",
      "description": "Fetches data from a URL and adds them to the context.\n\nAttributes:\n  - `url` - The main URL to use. May include parameters like `{{ locale }}` to customise the URL for the user.\n  - `name` - The name given to the result in the context.\n  - `fallback` - The fallback URL for if the fetch fails. Useful for when fetching locale specific data from a CMS.\n  - `no-cache` - By default all data is cached on the users machine. If set then that cache is disabled. Only use if you have to.",
      "attributes": [
        {
          "name": "url",
          "description": "The main URL to use. May include parameters like `{{ locale }}` to customise the URL for the user."
        },
        {
          "name": "name",
          "description": "The name given to the result in the context."
        },
        {
          "name": "fallback",
          "description": "The fallback URL for if the fetch fails. Useful for when fetching locale specific data from a CMS."
        },
        {
          "name": "no-cache",
          "description": "By default all data is cached on the users machine. If set then that cache is disabled. Only use if you have to.",
          "valueSet": "boolean"
        }
      ]
    },
    {
      "name": "u-text",
      "description": "Get a string from the context and place it into the dom. Will display a placeholder if no data is present.\n\nAttributes:\n  - `use` - The JavaScript snippet to get the data from the context.\n  - `lines` - The number of lines for the placeholder. *optional* **default**: 1",
      "attributes": [
        {
          "name": "use",
          "description": "The JavaScript snippet to get the data from the context.",
          "valueSet": "string | { text: string }"
        },
        {
          "name": "lines",
          "description": "The number of lines for the placeholder."
        }
      ]
    },
    {
      "name": "u-global",
      "description": "Accesses data from the `window` object and adds it to the context.\n\nAttributes:\n  - `var` - The key used on the `window` object\n  - `name` - The name given to the result in the context.",
      "attributes": [
        {
          "name": "var",
          "description": "The key used on the `window` object"
        },
        {
          "name": "name",
          "description": "The name given to the result in the context."
        }
      ]
    },
    {
      "name": "u-if",
      "description": "Will only render its children if data retrieved from the context is truthy.\n\nAttributes:\n  - `check` - The JavaScript snippet used to get the data from the context.",
      "attributes": [
        {
          "name": "check",
          "description": "The JavaScript snippet used to get the data from the context.",
          "valueSet": "string | boolean"
        }
      ]
    },
    {
      "name": "u-each",
      "description": "Repeats its children once for each item accessed from the context.\n\nAttributes:\n  - `subject` - A JavaScript snippet to extract the array from the context.\n  - `name` - The name to use in sub items to extract the item from the context.",
      "attributes": [
        {
          "name": "subject",
          "description": "A JavaScript snippet to extract the array from the context.",
          "valueSet": "string | Array<unknown>"
        },
        {
          "name": "name",
          "description": "The name to use in sub items to extract the item from the context."
        }
      ]
    },
    {
      "name": "u-paginator",
      "description": "Paginate using the context for data management. It will provide `{skip}` and `{take}` options to any `u-fetch` element containing it.\n\nAttributes:\n  - `total` - The JavaScript snippet used to get the data from the context. Should result in a number showing the total items available.\n  - `size` - The page size. *optional* **default**: 50",
      "attributes": [
        {
          "name": "total",
          "description": "The JavaScript snippet used to get the data from the context. Should result in a number showing the total items available.",
          "valueSet": "string | number"
        },
        {
          "name": "size",
          "description": "The page size."
        }
      ]
    },
    {
      "name": "u-route",
      "description": "Only displays the children if the browser matches the particular route. Provided routes are relative to the route used below, even if they start with a /.\n\nAttributes:\n  - `path` - The current path to match. Will be relative to the current URL. Use `:` at the start of a segment to use it as a parameter. The parameters will be available to any `u-fetch` tag that is a child.\n  - `exact` - If set then only exact matches will be allowed. Useful for home pages and landing pages.",
      "attributes": [
        {
          "name": "path",
          "description": "The current path to match. Will be relative to the current URL. Use `:` at the start of a segment to use it as a parameter. The parameters will be available to any `u-fetch` tag that is a child.",
          "valueSet": "string"
        },
        {
          "name": "exact",
          "description": "If set then only exact matches will be allowed. Useful for home pages and landing pages.",
          "valueSet": "boolean"
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": [
    {
      "name": "colour",
      "values": [
        {
          "name": "body",
          "description": "The main colour for the site, used for the body background colour."
        },
        {
          "name": "headline",
          "description": "Background from the body colour but with a darker text so as to stand out."
        },
        {
          "name": "surface",
          "description": "For blocks to stand out from rest of the document body. Should still be part of the document flow. Useful for things like cards and inputs."
        },
        {
          "name": "contrast",
          "description": "The opposite of surface. Part of the standard document flow but darker and normal text colour. Should be used for aside content."
        },
        {
          "name": "primary",
          "description": "The primary theme colour for the site. Should be used for most buttons and interactive content. Normally used for the site header."
        },
        {
          "name": "warning",
          "description": "Normally red. Used to indicate issues that require the immediate attention of the user. Normally form submission errors."
        },
        {
          "name": "rainbow_0",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_1",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_2",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_3",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_4",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_5",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_6",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_7",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_8",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        },
        {
          "name": "rainbow_9",
          "description": "Rainbow colours are for more flexible or designed content. Good for graphics, syntax highlighting, and the like."
        }
      ]
    },
    {
      "name": "target",
      "values": [
        {
          "name": "_self",
          "description": "the current browsing context. (Default)",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target"
            }
          ]
        },
        {
          "name": "_blank",
          "description": "usually a new tab, but users can configure browsers to open a new window instead.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target"
            }
          ]
        },
        {
          "name": "_parent",
          "description": "the parent browsing context of the current one. If no parent, behaves as `_self`.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target"
            }
          ]
        },
        {
          "name": "_top",
          "description": "the topmost browsing context (the \"highest\" context that's an ancestor of the current one). If no ancestors, behaves as `_self`.",
          "references": [
            {
              "name": "MDN Reference",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target"
            }
          ]
        }
      ]
    },
    {
      "name": "keyboard",
      "values": [
        {
          "name": "none",
          "description": "No virtual keyboard. For when the page implements its own keyboard input control."
        },
        {
          "name": "text",
          "description": "Standard input keyboard for the user's current locale."
        },
        {
          "name": "decimal",
          "description": "Fractional numeric input keyboard containing the digits and decimal separator for the user's locale (typically . or ,). Devices may or may not show a minus key (-)."
        },
        {
          "name": "numeric",
          "description": "Numeric input keyboard, but only requires the digits 0-9. Devices may or may not show a minus key."
        },
        {
          "name": "tel",
          "description": "A telephone keypad input, including the digits 0-9, the asterisk (*), and the pound (#) key. "
        },
        {
          "name": "search",
          "description": "A virtual keyboard optimized for search input. For instance, the return/submit key may be labeled \"Search\", along with possible other optimizations."
        },
        {
          "name": "email",
          "description": "A virtual keyboard optimized for entering email addresses. Typically includes the @character as well as other optimizations."
        },
        {
          "name": "url",
          "description": "A keypad optimized for entering URLs. This may have the / key more prominent, for example. Enhanced features could include history access and so on."
        }
      ]
    },
    {
      "name": "heading_level",
      "values": [
        {
          "name": "h1"
        },
        {
          "name": "h2"
        },
        {
          "name": "h3"
        },
        {
          "name": "h4"
        },
        {
          "name": "h5"
        },
        {
          "name": "h6"
        }
      ]
    },
    {
      "name": "position",
      "values": [
        {
          "name": "bottom right"
        },
        {
          "name": "bottom left"
        },
        {
          "name": "top right"
        },
        {
          "name": "top right"
        }
      ]
    },
    {
      "name": "unit_display",
      "values": [
        {
          "name": "long"
        },
        {
          "name": "short"
        },
        {
          "name": "narrow"
        }
      ]
    },
    {
      "name": "unit",
      "values": [
        {
          "name": "acre"
        },
        {
          "name": "bit"
        },
        {
          "name": "byte"
        },
        {
          "name": "celsius"
        },
        {
          "name": "centimeter"
        },
        {
          "name": "day"
        },
        {
          "name": "degree"
        },
        {
          "name": "fahrenheit"
        },
        {
          "name": "fluid-ounce"
        },
        {
          "name": "foot"
        },
        {
          "name": "gallon"
        },
        {
          "name": "gigabit"
        },
        {
          "name": "gigabyte"
        },
        {
          "name": "gram"
        },
        {
          "name": "hectare"
        },
        {
          "name": "hour"
        },
        {
          "name": "inch"
        },
        {
          "name": "kilobit"
        },
        {
          "name": "kilobyte"
        },
        {
          "name": "kilogram"
        },
        {
          "name": "kilometer"
        },
        {
          "name": "liter"
        },
        {
          "name": "megabit"
        },
        {
          "name": "megabyte"
        },
        {
          "name": "meter"
        },
        {
          "name": "mile"
        },
        {
          "name": "mile-scandinavian"
        },
        {
          "name": "milliliter"
        },
        {
          "name": "millimeter"
        },
        {
          "name": "millisecond"
        },
        {
          "name": "minute"
        },
        {
          "name": "month"
        },
        {
          "name": "ounce"
        },
        {
          "name": "percent"
        },
        {
          "name": "petabyte"
        },
        {
          "name": "pound"
        },
        {
          "name": "second"
        },
        {
          "name": "stone"
        },
        {
          "name": "terabit"
        },
        {
          "name": "terabyte"
        },
        {
          "name": "week"
        },
        {
          "name": "yard"
        },
        {
          "name": "year"
        }
      ]
    },
    {
      "name": "size",
      "values": [
        {
          "name": "small"
        },
        {
          "name": "medium"
        },
        {
          "name": "large"
        }
      ]
    },
    {
      "name": "button_type",
      "values": [
        {
          "name": "button",
          "description": "Use if the button should do nothing and you intend to handle click events for yourself."
        },
        {
          "name": "submit",
          "description": "Use if the button is within a `form` tag and you intend for the button to submit said form."
        }
      ]
    },
    {
      "name": "request_method",
      "values": [
        {
          "name": "get"
        },
        {
          "name": "put"
        },
        {
          "name": "post"
        },
        {
          "name": "delete"
        },
        {
          "name": "patch"
        }
      ]
    },
    {
      "name": "submission_type",
      "values": [
        {
          "name": "ajax-json"
        },
        {
          "name": "ajax-form-data"
        },
        {
          "name": "page-form-data"
        },
        {
          "name": "event-only"
        }
      ]
    },
    {
      "name": "boolean",
      "values": [
        {
          "name": "",
          "description": "true"
        }
      ]
    }
  ]
}
